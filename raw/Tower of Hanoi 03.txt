#include <unistd.h>

void print_move(int m) {
    if (m < 8) {
        return;
    }
    m -= 8;
    const auto order = m & 7;
    print_move(m ^ 1);
    {
        static constexpr auto moves =
            "1 3\n" "1 2\n" "2 1\n" "2 3\n" "3 2\n" "3 1\n";
        write(1, &moves[order << 2], 4);
    }
    print_move(m + (order < 3 ? 3 : -3));
}

int main() {
    static char buf[] = 
        "\n      \1"
        "1\n     \2""3\n     \2""7\n     \2""15\n    \3"
        "31\n    \3""63\n    \3""127\n   \4""255\n   \4"
        "511\n   \4""1023\n  \5""2047\n  \5""4095\n  \5"
        "8191\n  \5""16383\n \6""32767\n \6""65535\n \6"
    ;
    read(0, buf, 2);
    const int k = buf[1] >= '0';
    const int n = buf[k] - '0' + k * 10;
    const int m = n << 3;
    const auto moves = buf + m;
    write(1, moves, moves[7]);
    print_move(m);
}